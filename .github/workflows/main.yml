name: GOSDT CI

# Trigger on pushes to all branches and for all pull-requests
# Allow to run this workflow manually from the Actions tab
on: [push, pull_request, workflow_dispatch]

jobs:
    build:
        name: ${{ matrix.config.name }}
        runs-on: ${{ matrix.config.os }}
        strategy:
            fail-fast: false
            matrix:
                config:
                    - {
                        name: "Linux x86-64",
                        os: ubuntu-22.04,
                    }
                    - {
                        name: "macOS x86-64",
                        os: macos-12,
                    }
#                    - {
#                        name: "Windows x86-64",
#                        os: windows-2022,
#                    }
        steps:
            # Checkout the repo
            - name: Checkout the repo
              uses: actions/checkout@v3
            # Install required development tools
            - name: Install required development tools - Ninja
              uses: ashutoshvarma/setup-ninja@master
              with:
                  version: 1.11.1
            - name: Install required development tools - pkgconfig (Ubuntu)
              if: startsWith(matrix.config.os, 'ubuntu')
              run: |
                  sudo apt install -y pkg-config
            - name: Install required development tools - pkgconfig (macOS)
              if: startsWith(matrix.config.os, 'macos')
              run: |
                  brew install pkg-config
            - name: Install required development tools - pkgconfig (Windows)
              if: startsWith(matrix.config.os, 'windows')
              run: |
                  choco install pkgconfiglite
            - name: Install required development tools - Python 3.7
              uses: actions/setup-python@v4
              with:
                  python-version: '3.7'
            - name: Install required development tools - scikit-build
              run: |
                  python3 --version
                  pip3 install --upgrade scikit-build
            - name: Install required development tools - Wheel Fixer (Ubuntu)
              if: startsWith(matrix.config.os, 'ubuntu')
              run: |
                  pip3 install --upgrade auditwheel
                  sudo apt install -y patchelf
            - name: Install required development tools - Wheel Fixer (macOS)
              if: startsWith(matrix.config.os, 'macos')
              run: |
                  pip3 install --upgrade delocate
            - name: Install required development tools - Wheel Fixer (Windows)
              if: startsWith(matrix.config.os, 'windows')
              run: |
                  pip3 install --upgrade delvewheel
            # Install required 3rd-party libraries tools
            - name: Install required 3rd-party libraries (Ubuntu)
              if: startsWith(matrix.config.os, 'ubuntu')
              run: |
                  sudo apt install -y libtbb-dev
                  sudo apt install -y libgmp-dev
            - name: Install required 3rd-party libraries (macOS)
              if: startsWith(matrix.config.os, 'macos')
              run: |
                  brew install tbb
                  brew install gmp
            - name: Install required 3rd-party libraries (Windows)
              if: startsWith(matrix.config.os, 'windows')
              run: |
                  vcpkg install tbb:x64-windows
                  vcpkg install gmp:x64-windows
            # Build the project
            - name: Build the project
              run: |
                  python3 build.py
            # Upload the wheel file
            - name: Upload the wheel file
              uses: actions/upload-artifact@v2
              with:
                name: Artifacts
                path: dist/*.whl